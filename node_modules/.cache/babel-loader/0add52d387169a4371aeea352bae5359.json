{"ast":null,"code":"import _classCallCheck from \"/Users/omrigotlieb/Desktop/projects/Swapi/swapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omrigotlieb/Desktop/projects/Swapi/swapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omrigotlieb/Desktop/projects/Swapi/swapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omrigotlieb/Desktop/projects/Swapi/swapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omrigotlieb/Desktop/projects/Swapi/swapi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/omrigotlieb/Desktop/projects/Swapi/swapi/src/app/components/CardsGrid/CardsGrid.js\";\nimport React from 'react';\nimport SingleCard from '../SingleCard/SingleCard';\nimport { films } from '../../../data/films';\nimport { people } from '../../../data/people';\nimport { fetchDataFromAPI as _fetchDataFromAPI } from '../../../actions/actionCreators';\nimport { connect } from 'react-redux';\nimport './CardsGrid.css';\n\nvar CardsGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardsGrid, _React$Component);\n\n  function CardsGrid(props) {\n    var _this;\n\n    _classCallCheck(this, CardsGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardsGrid).call(this, props));\n    _this.state = {\n      films: [],\n      people: []\n    };\n    var avatars = {};\n    _this.params = _this.props.match.url.slice(1);\n    return _this;\n  }\n\n  _createClass(CardsGrid, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.params = this.props.match.url.slice(1);\n      var req;\n\n      if (this.params === 'films') {\n        req = require.context('../../../assets/films', true, /.*\\.png$/);\n      } else {\n        req = require.context('../../../assets/people', true, /.*\\.png$/);\n      }\n\n      this.avatars = req.keys();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchDataFromAPI(this.params);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.cardIcons = this.avatars || '';\n      var data = this.props.data1 || [];\n      var view = this.props.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"flex-container wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, data.map(function (item, index) {\n        var icon = _this2.avatars ? './' + _this2.params + '/' + _this2.avatars[index].slice(2) : null;\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(SingleCard, {\n          cardIcon: icon,\n          i: index,\n          view: view,\n          title: item.title,\n          episodeId: item.episode_id,\n          director: item.director,\n          name: item.name,\n          gender: item.gender,\n          favorite: _this2.props.favorite,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return CardsGrid;\n}(React.Component);\n\n; // const mapStateToProps = (state, ownProps) => ({\n//   isFavorite: ownProps.isFavorite\n// })\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchDataFromAPI: function fetchDataFromAPI(params) {\n      return dispatch(_fetchDataFromAPI(params));\n    }\n  };\n};\n\nCardsGrid = connect(null, mapDispatchToProps)(CardsGrid);\nexport default CardsGrid;","map":{"version":3,"sources":["/Users/omrigotlieb/Desktop/projects/Swapi/swapi/src/app/components/CardsGrid/CardsGrid.js"],"names":["React","SingleCard","films","people","fetchDataFromAPI","connect","CardsGrid","props","state","avatars","params","match","url","slice","req","require","context","keys","cardIcons","data","data1","view","map","item","index","icon","title","episode_id","director","name","gender","favorite","Component","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SingleCard from '../SingleCard/SingleCard';\nimport { films }  from '../../../data/films';\nimport { people }  from '../../../data/people';\nimport { fetchDataFromAPI } from '../../../actions/actionCreators';\nimport { connect } from 'react-redux';\nimport './CardsGrid.css';\n\n\nclass CardsGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      films: [],\n      people: []\n    }\n    let avatars = {};\n\n    this.params = this.props.match.url.slice(1);\n\n  }\n\n  componentWillMount () {\n      this.params = this.props.match.url.slice(1);\n      let req;\n      if(this.params === 'films') {\n        req = require.context('../../../assets/films', true, /.*\\.png$/);\n      } else {\n        req = require.context('../../../assets/people', true, /.*\\.png$/);\n      }\n      this.avatars = req.keys();\n     }\n\n     componentDidMount() {\n       this.props.fetchDataFromAPI(this.params);\n     }\n\n  render() {\n    this.cardIcons = this.avatars || '';\n    const data = this.props.data1 || [];\n    const view = this.props.data;\n    return (\n      <div>\n      <ul className=\"flex-container wrap\">\n      {data.map((item, index)  => {\n        let icon = this.avatars ? './' + this.params + '/'+ this.avatars[index].slice(2) : null;\n        return (<li key={index}>\n                <SingleCard\n                    cardIcon={icon}\n                    i={index}\n                    view={view}\n                    title={item.title}\n                    episodeId={item.episode_id}\n                    director={item.director}\n                    name={item.name}\n                    gender={item.gender}\n                    favorite={this.props.favorite}\n                    />\n                  </li>);\n                })}\n      </ul>\n      </div>\n    );\n  }\n};\n\n// const mapStateToProps = (state, ownProps) => ({\n//   isFavorite: ownProps.isFavorite\n// })\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDataFromAPI: (params) => dispatch(fetchDataFromAPI(params))\n})\n\nCardsGrid = connect(null, mapDispatchToProps)(CardsGrid)\nexport default CardsGrid;\n"]},"metadata":{},"sourceType":"module"}